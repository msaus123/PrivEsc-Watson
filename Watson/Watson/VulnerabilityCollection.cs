using System;
using System.Collections.Generic;

namespace Watson
{
    public class VulnerabilityCollection
    {
        private readonly List<Vulnerability> _vulnerabilities;
        private string _errors = "";

        public void SetAsVulnerable(string id)
        {
            foreach(var vuln in _vulnerabilities)
            {
                if(vuln.Identification == id)
                {
                    vuln.SetAsVulnerable();
                    return;
                }
            }
            //=> _vulnerabilities.First(e => e.Identification == id).SetAsVulnerable();
        }

        public void AddError(string errorMessage)
        {
            _errors += "ERROR> " + errorMessage + Environment.NewLine;
        }

        public VulnerabilityCollection()
        {
            _vulnerabilities = Populate();
        }

        public void ShowResults()
        {
            var anyVulnerable = false;
            var vulnCount = 0;

            foreach(var vuln in _vulnerabilities)
            {
                if(vuln.Vulnerable)
                {
                    anyVulnerable = true;
                    vulnCount++;
                    Console.WriteLine(" [!] {0} : VULNERABLE", vuln.Identification);

                    foreach (string exploit in vuln.KnownExploits)
                    {
                        Console.WriteLine("  [>] {0}", exploit);
                    }

                    Console.WriteLine();
                }
            }

            if (anyVulnerable)
                Console.WriteLine(" [*] Finished. Found {0} potential vulnerabilities.\r\n", vulnCount);
            else
                Console.WriteLine(" [*] Finished. Found 0 vulnerabilities.\r\n");

            // Output any errors found
            Console.WriteLine(_errors);
        }

        private List<Vulnerability> Populate()
        {
            return new List<Vulnerability>()
            {
                new Vulnerability(id: "MS10-015",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms10_015_kitrap0d.rb" }),

                new Vulnerability(id: "MS10-073",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/36327/" }),

                new Vulnerability(id: "MS10-092",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms10_092_schelevator.rb" }),

                new Vulnerability(id: "MS11-046",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40564/" }),

                new Vulnerability(id: "MS11-080",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms11_080_afdjoinleaf.rb" }),

                new Vulnerability(id: "MS12-042",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/20861/" }),

                new Vulnerability(id: "MS13-005",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms13_005_hwnd_broadcast.rb" }),

                new Vulnerability(id: "MS13-053",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms13_053_schlamperei.rb" }),

                new Vulnerability(id: "MS13-081",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms13_081_track_popup_menu.rb" }),

                new Vulnerability(id: "MS14-058",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms14_058_track_popup_menu.rb" }),

                new Vulnerability(id: "MS15-051",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms15_051_client_copy_image.rb" }),

                new Vulnerability(id: "MS15-076",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/37768/" }),

                new Vulnerability(id: "MS15-078",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms15_078_atmfd_bof.rb" }),

                new Vulnerability(id: "MS16-014",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms16_014_wmi_recv_notif.rb" }),

                new Vulnerability(id: "MS16-016",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/ms16_016_webdav.rb" }),

                new Vulnerability(id: "MS16-032",
                    exploits: new string[] { "https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Invoke-MS16-032.ps1" }),

                new Vulnerability(id: "MS16-034",
                    exploits: new string[] { "https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-034" }),

                new Vulnerability(id: "MS16-039",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/44480/" }),

                new Vulnerability(id: "MS16-072",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40219/" }),

                new Vulnerability(id: "MS16-111",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40429/" }),

                new Vulnerability(id: "MS16-123",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40572/" }),

                new Vulnerability(id: "MS16-125",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40562/" }),

                new Vulnerability(id: "MS16-135",
                    exploits: new string[] { "https://github.com/FuzzySecurity/PSKernel-Primitives/tree/master/Sample-Exploits/MS16-135" }),

                new Vulnerability(id: "MS16-138",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/40763/" }),

                new Vulnerability(id: "MS17-012",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/41607/" }),

                new Vulnerability(id: "MS17-017",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/42432/" }),

                new Vulnerability(id: "CVE-2017-0263",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/44478/" }),

                new Vulnerability(id: "CVE-2018-8897",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/mov_ss.rb" }),

                new Vulnerability(id: "CVE-2018-0952",
                    exploits: new string[] { "https://www.exploit-db.com/exploits/45244/" }),

                new Vulnerability(id: "CVE-2018-8440",
                    exploits: new string[] { "https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/local/alpc_taskscheduler.rb" }),

                new Vulnerability(
                    id: "CVE-2019-0836",
                    exploits: new string[] { "https://exploit-db.com/exploits/46718", "https://decoder.cloud/2019/04/29/combinig-luafv-postluafvpostreadwrite-race-condition-pe-with-diaghub-collector-exploit-from-standard-user-to-system/" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-0841",
                    exploits: new string[] { "https://github.com/rogue-kdc/CVE-2019-0841", "https://rastamouse.me/tags/cve-2019-0841/" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1064",
                    exploits: new string[] { "https://www.rythmstick.net/posts/cve-2019-1064/" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1130",
                    exploits: new string[] { "https://github.com/S3cur3Th1sSh1t/SharpByeBear" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1253",
                    exploits: new string[] { "https://github.com/padovah4ck/CVE-2019-1253", "https://github.com/sgabe/CVE-2019-1253" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1315",
                    exploits: new string[] { "https://offsec.almond.consulting/windows-error-reporting-arbitrary-file-move-eop.html" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1385",
                    exploits: new string[] { "https://www.youtube.com/watch?v=K6gHnr-VkAg" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1388",
                    exploits: new string[] { "https://github.com/jas502n/CVE-2019-1388" }
                    ),

                new Vulnerability(
                    id: "CVE-2019-1405",
                    exploits: new string[] { "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2019/november/cve-2019-1405-and-cve-2019-1322-elevation-to-system-via-the-upnp-device-host-service-and-the-update-orchestrator-service/", "https://github.com/apt69/COMahawk" }
                    ),
                new Vulnerability(
                    id: "CVE-2020-0668",
                    exploits: new string[] { "https://github.com/itm4n/SysTracingPoc" }
                    ),
                new Vulnerability(
                    id: "CVE-2020-0683",
                    exploits: new string[] { "https://github.com/padovah4ck/CVE-2020-0683", "https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/PowershellScripts/cve-2020-0683.ps1" }
                    ),
                new Vulnerability(
                    id: "CVE-2020-1013",
                    exploits: new string[] { "https://www.gosecure.net/blog/2020/09/08/wsus-attacks-part-2-cve-2020-1013-a-windows-10-local-privilege-escalation-1-day/" }
                    )
            };
        }
    }
}
